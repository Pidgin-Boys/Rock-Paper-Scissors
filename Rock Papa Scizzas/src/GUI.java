import java.awt.Dimension;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.LinkedList;

public class GUI extends javax.swing.JFrame
{   
    private Integer rounds;
    private DecisionEngine engine;
    private Dimension dimensions;
    private static ResultDatabase history;
    
    private static final String listTop = " Round # | Your Choice | Computer Choice | Result ";
    
    public GUI() 
    {
        history = new ResultDatabase();
        initComponents();
        dimensions = getSize();
        layerPane.getComponentsInLayer(1)[0].setVisible(false); // hide main menu for now
        setSize(initialPanel.getSize());
    }
    
    /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        layerPane = new javax.swing.JLayeredPane();
        gamePanel = new javax.swing.JPanel();
        menuPanel = new javax.swing.JPanel();
        rockButton = new javax.swing.JButton();
        paperButton = new javax.swing.JButton();
        scissorsButton = new javax.swing.JButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(20, 20), new java.awt.Dimension(10, 32767));
        helpButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        listAreaLayerPane = new javax.swing.JLayeredPane();
        roundHistoryPanel = new javax.swing.JPanel();
        predictionLabel = new javax.swing.JLabel();
        scoreLabel = new javax.swing.JLabel();
        roundHistoryScrollPane = new javax.swing.JScrollPane();
        roundHistoryList = new javax.swing.JList();
        helpPanel = new javax.swing.JPanel();
        helpLabel = new javax.swing.JLabel();
        initialPanel = new javax.swing.JPanel();
        mainPanel = new javax.swing.JPanel();
        aiChoiceList = new javax.swing.JScrollPane();
        aiField = new javax.swing.JList();
        roundsLabel = new javax.swing.JLabel();
        aiLabel = new javax.swing.JLabel();
        roundsField = new javax.swing.JTextField();
        cancelButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();
        errorMessageLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Rock Paper Scissors");
        setResizable(false);

        menuPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        rockButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rockButton.setText("Rock");
        rockButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rockButtonActionPerformed(evt);
            }
        });
        menuPanel.add(rockButton);

        paperButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        paperButton.setText("Paper");
        paperButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paperButtonActionPerformed(evt);
            }
        });
        menuPanel.add(paperButton);

        scissorsButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        scissorsButton.setText("Scissors");
        scissorsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scissorsButtonActionPerformed(evt);
            }
        });
        menuPanel.add(scissorsButton);
        menuPanel.add(filler1);

        helpButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        helpButton.setText("Help");
        helpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpButtonActionPerformed(evt);
            }
        });
        menuPanel.add(helpButton);

        exitButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });
        menuPanel.add(exitButton);

        roundHistoryPanel.setMaximumSize(new java.awt.Dimension(32765, 32765));

        predictionLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        scoreLabel.setBackground(new java.awt.Color(250, 250, 250));
        scoreLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        roundHistoryList.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        roundHistoryList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        roundHistoryList.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        roundHistoryScrollPane.setViewportView(roundHistoryList);

        javax.swing.GroupLayout roundHistoryPanelLayout = new javax.swing.GroupLayout(roundHistoryPanel);
        roundHistoryPanel.setLayout(roundHistoryPanelLayout);
        roundHistoryPanelLayout.setHorizontalGroup(
            roundHistoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundHistoryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(roundHistoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(predictionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 430, Short.MAX_VALUE)
                    .addGroup(roundHistoryPanelLayout.createSequentialGroup()
                        .addComponent(roundHistoryScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, roundHistoryPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(scoreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        roundHistoryPanelLayout.setVerticalGroup(
            roundHistoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundHistoryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(roundHistoryScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 533, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(predictionLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(scoreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        roundHistoryPanel.setBounds(0, 0, 450, 577);
        listAreaLayerPane.add(roundHistoryPanel, new Integer(2));

        helpLabel.setText("blah blah blah i'm a help dialogue");

        javax.swing.GroupLayout helpPanelLayout = new javax.swing.GroupLayout(helpPanel);
        helpPanel.setLayout(helpPanelLayout);
        helpPanelLayout.setHorizontalGroup(
            helpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(helpPanelLayout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addComponent(helpLabel)
                .addContainerGap(171, Short.MAX_VALUE))
        );
        helpPanelLayout.setVerticalGroup(
            helpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(helpPanelLayout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addComponent(helpLabel)
                .addContainerGap(277, Short.MAX_VALUE))
        );

        helpPanel.setBounds(10, 80, 410, 380);
        listAreaLayerPane.add(helpPanel, new Integer(1));

        javax.swing.GroupLayout gamePanelLayout = new javax.swing.GroupLayout(gamePanel);
        gamePanel.setLayout(gamePanelLayout);
        gamePanelLayout.setHorizontalGroup(
            gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(listAreaLayerPane, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(menuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        gamePanelLayout.setVerticalGroup(
            gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gamePanelLayout.createSequentialGroup()
                .addComponent(listAreaLayerPane, javax.swing.GroupLayout.PREFERRED_SIZE, 555, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(menuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        gamePanel.setBounds(0, 0, 450, 600);
        layerPane.add(gamePanel, new Integer(1));

        aiField.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        aiField.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Smart", "Random" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        aiField.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        aiChoiceList.setViewportView(aiField);

        roundsLabel.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        roundsLabel.setText("Enter the number of rounds:");

        aiLabel.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        aiLabel.setText("Select the AI Engine to use:");

        roundsField.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N

        cancelButton.setText("Cancel");
        cancelButton.setActionCommand("cancelButton");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        okButton.setText("OK");
        okButton.setActionCommand("okButton");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(errorMessageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(roundsLabel)
                                    .addComponent(aiLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(aiChoiceList, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                                    .addComponent(roundsField))))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(okButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton)
                        .addGap(114, 114, 114))))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(aiLabel)
                    .addComponent(aiChoiceList, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(roundsLabel)
                    .addComponent(roundsField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okButton)
                    .addComponent(cancelButton))
                .addGap(43, 43, 43)
                .addComponent(errorMessageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout initialPanelLayout = new javax.swing.GroupLayout(initialPanel);
        initialPanel.setLayout(initialPanelLayout);
        initialPanelLayout.setHorizontalGroup(
            initialPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(initialPanelLayout.createSequentialGroup()
                .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        initialPanelLayout.setVerticalGroup(
            initialPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
        );

        initialPanel.setBounds(-10, -10, 400, 200);
        layerPane.add(initialPanel, new Integer(2));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 480, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(layerPane, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 643, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(layerPane, javax.swing.GroupLayout.PREFERRED_SIZE, 621, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        String engType = (String) aiField.getSelectedValue();
        try { rounds = Integer.valueOf(roundsField.getText()); }
        catch (NumberFormatException e) {}
        
        String error = null;
        if (engType == null)
        {
            error = (rounds == null)
                    ? "You must select an engine type and number of rounds."
                    : "You must select an engine type to continue.";
        }
        else error = "You must enter the number of rounds";
        errorMessageLabel.setText(error);        
        
        if (engType != null && rounds != null) 
        {
            initialPanel.setVisible(false);
            gamePanel.setVisible(true);
            engine = DecisionEngine.make(engType);
            setSize(dimensions);
        }
    }//GEN-LAST:event_okButtonActionPerformed
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        setVisible(false);
        dispose();
        System.exit(0);
    }//GEN-LAST:event_cancelButtonActionPerformed

private void paperButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paperButtonActionPerformed
    processChoice(Choice.PAPER);
}//GEN-LAST:event_paperButtonActionPerformed

private void helpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpButtonActionPerformed
    processChoice(Choice.HELP);   
}//GEN-LAST:event_helpButtonActionPerformed

private void rockButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rockButtonActionPerformed
    processChoice(Choice.ROCK);
}//GEN-LAST:event_rockButtonActionPerformed

private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
    processChoice(Choice.EXIT);
}//GEN-LAST:event_exitButtonActionPerformed

private void scissorsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scissorsButtonActionPerformed
    processChoice(Choice.SCISSORS);
}//GEN-LAST:event_scissorsButtonActionPerformed

    private void processChoice(Choice choice)
    {
        switch (choice.getValue()) 
        {
            case 1:
            case 2:
            case 3:
                --this.rounds;
                
                // add the result to the database
                Result result = new Result(choice, engine.getComputerChoice(history));
                history.add(result);
                
                // get the next predicted move and display
                Choice predicted = engine.getComputerChoice(history);
                if (predicted.equals(Choice.ROCK)) 
                    predicted = Choice.SCISSORS;
                else if (predicted.equals(Choice.PAPER)) 
                    predicted = Choice.ROCK;
                else
                    predicted = Choice.PAPER;
                if (!(engine instanceof RandomEngine))
                    predictionLabel.setText("The computer predicts you will play " + predicted);                    
                
                // display results in descending order
                final int numberToDisplay = 100;
                LinkedList<String> results = history.getResults();
                Iterator<String> iter = results.descendingIterator();
                ArrayList<String> listData = new ArrayList<String>(numberToDisplay);
                listData.add(listTop);
                
                int i = 0;
                while(++i < numberToDisplay+1 && iter.hasNext())
                    listData.add(iter.next());
                roundHistoryList.setListData(listData.toArray());
                
                if (this.rounds == 0) 
                {
                    setVisible(false);
                    dispose();
                    System.exit(0);
                }
                break;
            case 4: 
                if (helpPanel.isVisible())
                {
                    rockButton.setEnabled(true);      
                    paperButton.setEnabled(true);
                    scissorsButton.setEnabled(true);  
                    helpPanel.setVisible(false);
                    helpLabel.setText("Resume");
                }
                else
                {
                    rockButton.setEnabled(false);      
                    paperButton.setEnabled(false);
                    scissorsButton.setEnabled(false);  
                    helpPanel.setVisible(true);
                    helpLabel.setText("Pause");
                }                
                break;
            case 6:
                setVisible(false);
                dispose();
                System.exit(0);           
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane aiChoiceList;
    private javax.swing.JList aiField;
    private javax.swing.JLabel aiLabel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel errorMessageLabel;
    private javax.swing.JButton exitButton;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JPanel gamePanel;
    private javax.swing.JButton helpButton;
    private javax.swing.JLabel helpLabel;
    private javax.swing.JPanel helpPanel;
    private javax.swing.JPanel initialPanel;
    private javax.swing.JLayeredPane layerPane;
    private javax.swing.JLayeredPane listAreaLayerPane;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel menuPanel;
    private javax.swing.JButton okButton;
    private javax.swing.JButton paperButton;
    private javax.swing.JLabel predictionLabel;
    private javax.swing.JButton rockButton;
    private javax.swing.JList roundHistoryList;
    private javax.swing.JPanel roundHistoryPanel;
    private javax.swing.JScrollPane roundHistoryScrollPane;
    private javax.swing.JTextField roundsField;
    private javax.swing.JLabel roundsLabel;
    private javax.swing.JButton scissorsButton;
    private javax.swing.JLabel scoreLabel;
    // End of variables declaration//GEN-END:variables
}
